{"remainingRequest":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\src\\views\\oceanSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\src\\views\\oceanSensor.vue","mtime":1636602374401},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\babel.config.js","mtime":1636357460074},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _oceanSensor = require(\"@/api/oceanSensor\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Home',\n  data: function data() {\n    return {\n      activeName: 'first',\n      dynamicTags: ['标签一', '标签二', '标签三'],\n      inputVisible: false,\n      inputValue: '',\n      input1: '',\n      input2: '',\n      input3: '',\n      input4: '',\n      formInline: {\n        content: '',\n        date1: '',\n        date2: ''\n      },\n      tableData: [],\n      multipleSelection: [],\n      showParams: {\n        page: 1,\n        size: 10\n      },\n      showSensor: [],\n      drawer: false,\n      drawer2: false,\n      form: {\n        name: '',\n        wind_speed: '',\n        temperature: '',\n        longitude: '',\n        latitude: '',\n        topic: ''\n      },\n      form2: {\n        name: '',\n        wind_speed: '',\n        temperature: '',\n        longitude: '',\n        latitude: '',\n        topic: ''\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    (0, _oceanSensor.showSensor)(this.showParams.page, this.showParams.size).then(function (res) {\n      _this.tableData = res;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  },\n  methods: {\n    handleClick: function handleClick(tab, event) {\n      console.log(tab, event);\n    },\n    handleClose: function handleClose(tag) {\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1);\n    },\n    showInput: function showInput() {\n      var _this2 = this;\n\n      this.inputVisible = true;\n      this.$nextTick(function (_) {\n        _this2.$refs.saveTagInput.$refs.input.focus();\n      });\n    },\n    handleInputConfirm: function handleInputConfirm() {\n      var inputValue = this.inputValue;\n\n      if (inputValue) {\n        this.dynamicTags.push(inputValue);\n      }\n\n      this.inputVisible = false;\n      this.inputValue = '';\n    },\n    resetForm: function resetForm(formName) {\n      if (this.$refs[formName] !== undefined) {\n        this.$refs[formName].resetFields();\n      }\n    },\n    toggleSelection: function toggleSelection(rows) {\n      var _this3 = this;\n\n      if (rows) {\n        rows.forEach(function (row) {\n          _this3.$refs.multipleTable.toggleRowSelection(row);\n        });\n      } else {\n        this.$refs.multipleTable.clearSelection();\n      }\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      var now = this.multipleSelection[0];\n      this.form2 = {\n        name: now.name,\n        wind_speed: now.config.wind_speed,\n        temperature: now.config.temperature,\n        longitude: now.longitude,\n        latitude: now.latitude,\n        topic: now.topic,\n        id: now.id\n      };\n    },\n    onSubmit: function onSubmit() {\n      var _this4 = this;\n\n      var config = {\n        'wind_speed': this.form.wind_speed,\n        'temperature': this.form.temperature\n      };\n      var data = {\n        'name': this.form.name,\n        'config': JSON.stringify(config),\n        'longitude': this.form.longitude,\n        'latitude': this.form.latitude,\n        'topic': this.form.topic\n      };\n      var body = JSON.stringify(data); // 接口调用\n\n      (0, _oceanSensor.addSensor)(body).then(function (res) {\n        var config1 = JSON.parse(res.config);\n\n        _this4.tableData.push({\n          name: res.name,\n          wind_speed: config1.wind_speed,\n          temperature: config1.temperature,\n          longitude: res.longitude,\n          latitude: res.latitude,\n          topic: res.topic,\n          id: res.id\n        });\n      }).catch(function (error) {\n        console.error(error);\n      }).finally(function () {\n        location.reload();\n      });\n    },\n    cancel: function cancel() {\n      this.drawer = false;\n      this.form = {\n        name: '',\n        wind_speed: '',\n        temperature: '',\n        longitude: '',\n        latitude: '',\n        topic: ''\n      };\n      location.reload();\n    },\n    addList: function addList() {\n      this.drawer = true;\n    },\n    deleteList: function deleteList() {\n      var deleteId = [];\n\n      if (this.multipleSelection) {\n        this.multipleSelection.forEach(function (e) {\n          deleteId.push(e.id);\n        });\n      }\n\n      var params = JSON.stringify(deleteId);\n      (0, _oceanSensor.deleteSensor)(params).then(function (res) {\n        console.log(res, '删除成功！');\n      }).catch(function (error) {\n        console.error(error);\n      }).finally(function () {\n        location.reload();\n      });\n    },\n    reviseList: function reviseList() {\n      this.drawer2 = true;\n    },\n    onSubmit2: function onSubmit2() {\n      var config = {\n        'wind_speed': this.form2.wind_speed,\n        'temperature': this.form2.temperature\n      };\n      var data = {\n        'id': this.form2.id,\n        'name': this.form2.name,\n        'config': JSON.stringify(config),\n        'longitude': this.form2.longitude,\n        'latitude': this.form2.latitude,\n        'topic': this.form2.topic\n      };\n      var body = JSON.stringify(data);\n      (0, _oceanSensor.updateSensor)(body).then(function (res) {\n        console.log('aaa', res);\n      }).catch(function (error) {\n        console.log(error);\n      }).finally(function () {\n        location.reload();\n      });\n    },\n    cancel2: function cancel2() {\n      this.drawer = false;\n      this.form2 = {\n        name: '',\n        wind_speed: '',\n        temperature: '',\n        longitude: '',\n        latitude: '',\n        topic: ''\n      };\n      location.reload();\n    }\n  }\n};\nexports.default = _default;",null]}