{"remainingRequest":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\src\\views\\oceanSensor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\src\\views\\oceanSensor.vue","mtime":1636602374401},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\untitled\\Ocean-Internet-of-Things\\Frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { showSensor, addSensor, deleteSensor, updateSensor } from '@/api/oceanSensor'\r\nexport default {\r\n  name: 'Home',\r\n  data() {\r\n    return {\r\n      activeName: 'first',\r\n      dynamicTags: ['标签一', '标签二', '标签三'],\r\n      inputVisible: false,\r\n      inputValue: '',\r\n      input1: '',\r\n      input2: '',\r\n      input3: '',\r\n      input4: '',\r\n      formInline: {\r\n        content: '',\r\n        date1: '',\r\n        date2: ''\r\n      },\r\n      tableData: [],\r\n      multipleSelection: [],\r\n      showParams: {\r\n        page: 1,\r\n        size: 10\r\n      },\r\n      showSensor: [],\r\n      drawer: false,\r\n      drawer2: false,\r\n      form: {\r\n        name: '',\r\n        wind_speed: '',\r\n        temperature: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        topic: ''\r\n      },\r\n      form2: {\r\n        name: '',\r\n        wind_speed: '',\r\n        temperature: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        topic: ''\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    showSensor(this.showParams.page, this.showParams.size)\r\n      .then((res) => {\r\n        this.tableData = res\r\n      })\r\n      .catch((error) => {\r\n        console.error(error)\r\n      })\r\n  },\r\n  methods: {\r\n    handleClick(tab, event) {\r\n      console.log(tab, event)\r\n    },\r\n    handleClose(tag) {\r\n      this.dynamicTags.splice(this.dynamicTags.indexOf(tag), 1)\r\n    },\r\n\r\n    showInput() {\r\n      this.inputVisible = true\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n\r\n    handleInputConfirm() {\r\n      const inputValue = this.inputValue\r\n      if (inputValue) {\r\n        this.dynamicTags.push(inputValue)\r\n      }\r\n      this.inputVisible = false\r\n      this.inputValue = ''\r\n    },\r\n    resetForm(formName) {\r\n      if (this.$refs[formName] !== undefined) {\r\n        this.$refs[formName].resetFields()\r\n      }\r\n    },\r\n    toggleSelection(rows) {\r\n      if (rows) {\r\n        rows.forEach(row => {\r\n          this.$refs.multipleTable.toggleRowSelection(row)\r\n        })\r\n      } else {\r\n        this.$refs.multipleTable.clearSelection()\r\n      }\r\n    },\r\n    handleSelectionChange(val) {\r\n      this.multipleSelection = val\r\n      const now = this.multipleSelection[0]\r\n      this.form2 = {\r\n        name: now.name,\r\n        wind_speed: now.config.wind_speed,\r\n        temperature: now.config.temperature,\r\n        longitude: now.longitude,\r\n        latitude: now.latitude,\r\n        topic: now.topic,\r\n        id: now.id\r\n      }\r\n    },\r\n    onSubmit() {\r\n      const config = {\r\n        'wind_speed': this.form.wind_speed,\r\n        'temperature': this.form.temperature\r\n      }\r\n      const data = {\r\n        'name': this.form.name,\r\n        'config': JSON.stringify(config),\r\n        'longitude': this.form.longitude,\r\n        'latitude': this.form.latitude,\r\n        'topic': this.form.topic\r\n      }\r\n      const body = JSON.stringify(data)\r\n      // 接口调用\r\n      addSensor(body)\r\n        .then((res) => {\r\n          const config1 = JSON.parse(res.config)\r\n          this.tableData.push({\r\n            name: res.name,\r\n            wind_speed: config1.wind_speed,\r\n            temperature: config1.temperature,\r\n            longitude: res.longitude,\r\n            latitude: res.latitude,\r\n            topic: res.topic,\r\n            id: res.id\r\n          })\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n        .finally(() => {\r\n          location.reload()\r\n        })\r\n    },\r\n    cancel() {\r\n      this.drawer = false\r\n      this.form = {\r\n        name: '',\r\n        wind_speed: '',\r\n        temperature: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        topic: ''\r\n      }\r\n      location.reload()\r\n    },\r\n    addList() {\r\n      this.drawer = true\r\n    },\r\n    deleteList() {\r\n      const deleteId = []\r\n      if (this.multipleSelection) {\r\n        this.multipleSelection.forEach(function(e) {\r\n          deleteId.push(e.id)\r\n        })\r\n      }\r\n      const params = JSON.stringify(deleteId)\r\n      deleteSensor(params)\r\n        .then((res) => {\r\n          console.log(res, '删除成功！')\r\n        })\r\n        .catch((error) => {\r\n          console.error(error)\r\n        })\r\n        .finally(() => {\r\n          location.reload()\r\n        })\r\n    },\r\n    reviseList() {\r\n      this.drawer2 = true\r\n    },\r\n    onSubmit2() {\r\n      const config = {\r\n        'wind_speed':this.form2.wind_speed,\r\n        'temperature':this.form2.temperature\r\n      }\r\n      const data = {\r\n        'id':this.form2.id,\r\n        'name':this.form2.name,\r\n        'config':JSON.stringify(config),\r\n        'longitude':this.form2.longitude,\r\n        'latitude':this.form2.latitude,\r\n        'topic':this.form2.topic\r\n      }\r\n      const body = JSON.stringify(data)\r\n      updateSensor(body)\r\n        .then((res) => {\r\n          console.log('aaa', res)\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n        .finally(() => {\r\n          location.reload()\r\n        })\r\n    },\r\n    cancel2() {\r\n      this.drawer = false\r\n      this.form2 = {\r\n        name: '',\r\n        wind_speed: '',\r\n        temperature: '',\r\n        longitude: '',\r\n        latitude: '',\r\n        topic: ''\r\n      }\r\n      location.reload()\r\n    }\r\n  }\r\n}\r\n",null]}